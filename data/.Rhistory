tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
yat <- predict.glm(out.lr,evars5)
yhat <- predict.glm(out.lr,evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
rf
yhat <- predict(rf, newdata=evars5)
tab <- table(test$spam, yhat)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
tab
yhat <- predict(m, evars5)
tab <- table(evars5$response, yhat)
tab
rf <- randomForest(response~.,data=evars5, ntree=500, mtry=20, nodesize=5)
rf <- randomForest(response~.,data=evars5, ntree=500, mtry=18, nodesize=5)
yhat <- predict(rf, newdata=evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
tab
rf <- randomForest(response~.,data=evars5, ntree=500, mtry=18, nodesize=5)
yhat <- predict(rf, newdata=evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
tab
names(evars5)
rf <- randomForest(response~lc,data=evars5, ntree=500, mtry=18, nodesize=5)
yhat <- predict(rf, newdata=evars5)
rf <- randomForest(response~lc,data=evars5, ntree=500, mtry=1, nodesize=5)
yhat <- predict(rf, newdata=evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
View(rf)
rf <- randomForest(response~lc+,data=evars5, ntree=500, mtry=2, nodesize=5)
rf <- randomForest(response~lc,data=evars5, ntree=500, mtry=2, nodesize=5)
rf <- randomForest(response~lc,data=evars5, ntree=500, mtry=1, nodesize=5)
yhat <- predict(rf, newdata=evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
ids
evars5.train <- evars5[ids,]
evars5.test <- evars5[-ids,]
rf <- randomForest(response~lc,data=evars5.train, ntree=500, mtry=1, nodesize=5)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=500, mtry=1, nodesize=5)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=500, mtry=10, nodesize=5)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=500, mtry=18, nodesize=5)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=1000, mtry=18, nodesize=5)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=1000, mtry=5, nodesize=5)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=1000, mtry=2, nodesize=5)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=1000, mtry=2, nodesize=2)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=1000, mtry=2, nodesize=2)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=1000, mtry=2, nodesize=100)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
rf <- randomForest(response~.,data=evars5.train, ntree=10000, mtry=5, nodesize=5)
yhat <- predict(rf, newdata=evars5.test)
tab <- table(evars5.test$response, yhat)
1-sum(diag(tab))/sum(tab)
g.l <- cv.lars(x=as.matrix(train[,-1]),y=as.matrix(train[,1]),type="lasso")
library("largs")
library("lars")
g.l <- cv.lars(x=as.matrix(train[,-1]),y=as.matrix(train[,1]),type="lasso")
train <- evars5[ids,]
test <- evars5[-ids,]
g.l <- cv.lars(x=as.matrix(train[,-1]),y=as.matrix(train[,1]),type="lasso")
train[,1]
g.l <- glmnet(train)
library("glmnet")
install.packages("glmnet")
library("glmnet")
g.l <- glmnet(train)
g.l <- glmnet(response~.,train)
g.l <- glmnet(response~.-time,train)
g.l <- glmnet(train[,-1],train[,1],train)
g.l <- glmnet(train[,-1],train[,1],train,family="binomial")
?glmnet
g.l <- glmnet(train[,-1],train[,1],train,family="binomial",alpha=1)
train[,-1]
train[,1]
nrow(train)
g.l <- glmnet(train[,-1],train[,1],train,family="binomial",weights=nrow(train),alpha=1)
nrow(train)
g.l <- glmnet(train[,-1],train[,1],train,family="binomial",weights=431,alpha=1)
g.l <- glmnet(train[,-1],train[,1],train,family="binomial",weights=rep(0,431),alpha=1)
g.l <- glmnet(train[,-1],train[,1],train,family="binomial",weights=rep(0,431))
,weights=rep(0,431)
rep(0,431)
g.l <- glmnet(train[,-1],train[,1],train,family="binomial",weights=rep(1,431))
glmnet(train[,-1],train[,1],train,family="binomial",weights=rep(1,431))
library(faraway)
data(ozone)
pairs(ozone)
olm <- lm(O3 ~ temp + ibh + ibt, ozone)
summary(olm)
plot(x=ozone$ibt, y=olm$res)
library(gam)
amgam <- gam(O3 ~ s(temp) + s(ibh) + s(ibt), data=ozone)
?gam
source('~/Dropbox/Documents/Yale/Data Mining & Machine Learning/Ch09_gam.R', echo=TRUE)
library(gam)
gm <- gam(response ~., evars5, family=binomial)
gm
summary(gm)
yhat <- predict(gm, evars5)
yhat
1-sum(diag(tab))/sum(tab)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
out.lr <- gam(response~., family=binomial, data=evars5)
yhat <- predict.glm(out.lr,evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., data=evars5)
#m.s <- step(m, trace=F)
#yhat <- predict(m.s, evars5)
#tab <- table(evars5$response, yhat)
#1-sum(diag(tab))/sum(tab)
yhat <- predict(m, evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- gam(response~., data=evars5)
#m.s <- step(m, trace=F)
#yhat <- predict(m.s, evars5)
#tab <- table(evars5$response, yhat)
#1-sum(diag(tab))/sum(tab)
yhat <- predict(m, evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- gam(response~., data=evars5, type=binomial)
#m.s <- step(m, trace=F)
#yhat <- predict(m.s, evars5)
m <- gam(response~., data=evars5, type=binomial)
m <- gam(response~., evars5, family=binomial)
yhat <- predict(m, evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., evars5, family=binomial)
#m.s <- step(m, trace=F)
#yhat <- predict(m.s, evars5)
#tab <- table(evars5$response, yhat)
#1-sum(diag(tab))/sum(tab)
yhat <- predict(m, evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., evars5[,-2], family=binomial)
yhat <- predict(m, evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., evars5[,1:2], family=binomial)
#m.s <- step(m, trace=F)
#yhat <- predict(m.s, evars5)
#tab <- table(evars5$response, yhat)
#1-sum(diag(tab))/sum(tab)
yhat <- predict(m, evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., train[,1:2], family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., train[,1:4], family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., train[,1:10], family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., train[,1:15], family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., train[,1:2], family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
m
summarry(m)
summary(m)
m <- multinom(response~., train[,(names(evars5)%in%c("response","f12"))], family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
m <- multinom(response~., train[,(names(evars5)%in%c("response","f12","s12"))], family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
evars5 <- cbind(response=(close-lagClose)>0, evars1[,-1], fp1, fp2-fp3, fp3-fp4, fp4-fp5, fp5-fp6, fp6-fp7, fp7-fp8, fp8-fp9, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
evars5 <- cbind(response=(close-lagClose)>0, evars1[,-1], fp1, fp2, fp3-fp4, fp4-fp5, fp5-fp6, fp6-fp7, fp7-fp8, fp8-fp9, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
evars5 <- cbind(response=(close-lagClose)>0, evars1[,-1], fp1, fp2, fp3, fp4-fp5, fp5-fp6, fp6-fp7, fp7-fp8, fp8-fp9, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
#m.s <- step(m, trace=F)
evars5 <- cbind(response=(close-lagClose)>0, evars1[,-1], fp1, fp2, fp3, fp4, fp5-fp6, fp6-fp7, fp7-fp8, fp8-fp9, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
evars5 <- cbind(response=(close-lagClose)>0, evars1[,-1], fp1, fp2, fp3, fp4, fp5, fp6-fp7, fp7-fp8, fp8-fp9, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
#m.s <- step(m, trace=F)
evars5 <- cbind(response=(close-lagClose)>0, evars1[,-1], fp1, fp2, fp3, fp4, fp5, fp6, fp7-fp8, fp8-fp9, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
evars5 <- cbind(response=(close-lagClose)>0, evars1[,-1], fp1, fp2, fp3, fp4, fp5, fp6, fp7, fp8, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
set.seed(123)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
evars5 <- cbind(response=(close-lagClose)>0, evars1[,-1], log(fp1), fp2, fp3, fp4, fp5, fp6, fp7, fp8, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
set.seed(123)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
evars5 <- cbind(response=(close-lagClose)>0, evars1[,-1], log(fp1), log(fp2), fp3, fp4, fp5, fp6, fp7, fp8, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
set.seed(123)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
evars5 <- cbind(response=(close-lagClose)>0, log(fp1), log(fp2), log(fp3), fp4, fp5, fp6, fp7, fp8, fpday)
names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
set.seed(123)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
evars5 <- cbind(response=(close-lagClose)>0, log(fp1), log(fp2), log(fp3), fp4, fp5, fp6, fp7, fp8, fpday)
#names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
names(evars5) <- c("response","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
set.seed(123)
evars5
evars5 <- cbind(response=(close-lagClose)>0, log(fp1), log(fp2), log(fp3), fp4, fp5, fp6, fp7, fp8, fpday)
evars5 <- data.frame(response=(close-lagClose)>0, log(fp1), log(fp2), log(fp3), fp4, fp5, fp6, fp7, fp8, fpday)
#names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5) <- c("response","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
set.seed(123)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
evars5 <- data.frame(response=(close-lagClose)>0, log(fp1), log(fp2), log(fp3))#, fp4, fp5, fp6, fp7, fp8, fpday)
#names(evars5) <- c("response","lc","fhigh","flow","highlow","maxhigh","f12","f1day","f1week","fvol","s12","s23","s34","s45","s56","s67","s78","s89","sday")
names(evars5) <- c("response","s12","s23","s34")#,"s45","s56","s67","s78","s89","sday")
names(evars5)
evars5 <- evars5[complete.cases(evars5),]
evars5$response <- factor(evars5$response)
set.seed(123)
ids <- sample(1:nrow(evars5),nrow(evars5)/2)
train <- evars5[ids,]
test <- evars5[-ids,]
m <- multinom(response~., train, family=binomial)
yhat <- predict(m, test)
tab <- table(test$response, yhat)
1-sum(diag(tab))/sum(tab)
out.lda <- lda(response~.,evars5)
yhat <- predict(out.lda,evars5)$class
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
out.lda <- qda(response~., evars5)
yhat <- predict(out.lda,evars5)$class
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
out.lr <- glm(response~., family=binomial, data=evars5)
yhat <- predict.glm(out.lr,evars5)
tab <- table(evars5$response, yhat)
1-sum(diag(tab))/sum(tab)
TRUE FALSE
TRUE 20 1
FALSE 1 20
# Load necessary libraries
library(survey)
library(rpart)
library(rpart.plot)
# Create RMSE function for comparing methods
rmse <- function(yhat,y) sqrt(mean((yhat-y)^2))
# Set working directory
dir <- "C:/Users/Elijah Goldberg/Dropbox/Documents/Research/Poverty Prediction/new/data/"
setwd(dir)
# Load and prepare necessary data
pr <- read.table("master.csv", header = T)
pr$finalDate <- as.Date(pr$finalDate); pr$year <- as.integer(pr$year); pr$month <- as.integer(pr$month)
pr$r1 = c(NA, pr$rate[1:(nrow(pr)-1)]);
pr$r12 = c(rep(NA, 12), pr$rate[1:(nrow(pr)-12)]);
#######################################
# Generate train and test sets        #
#######################################
pr.possible <- pr[-(1:12),-c(1,60,61)] # Remove factors that don't have previous yearly data
n <- nrow(pr.possible)
set.seed(1) # Make results reproducible
smpl <- sample(1:n, n*.80)
pr.train <- pr.possible[smpl,]
pr.test <- pr.possible[-smpl,]
models <- c("Autoregressive, full", "Autoregressive, stepped", "Autoregressive, manual", "Tree")
rmses <- c("Train", "Test")
results <- data.frame(matrix(nrow=length(models),ncol=length(rmses)))
colnames(results) <- rmses
rownames(results) <- models
rm(models, rmses)
#######################################
# Fit seasonal autoregressive         #
# Full model                          #
#######################################
# Seasonal auto-regressive model, as demonstrated by Choi and Varian
pr.fit <- lm(rate ~ . , pr.train)
summary(pr.fit)
pr.predict <- predict(pr.fit, pr.test)
# Calculate, save RMSE
results[1,1] <- rmse(pr.fit$fit, pr.train$rate)
results[1,2] <- rmse(pr.predict, pr.test$rate) # This is pretty high: not a good predictive model
?save
dir()
save(pr.fit, file="../models/m.ar.full")
rm(pr.fit, pr.predict)
pr.fit <- lm(rate ~ . , pr.train)
summary(pr.fit)
# Remove non-significant variables
pr.stepped1 <- step(pr.fit)
pr.stepped2 <- step(pr.stepped1, direction="both")
pr.stepped3 <- step(pr.fit, direction="both", k=log(nrow(pr)))
# Select highest r-squared
c <- c(summary(pr.stepped1)[8],
summary(pr.stepped2)[8],
summary(pr.stepped3)[8])
max <- which.max(c)
# Diagnostic plot
windows()
par(mfrow=c(2,2))
plot(pr.stepped1)
# Test predictive power
pr.predict <- predict(pr.stepped1, pr.test)
windows()
plot(pr$finalDate, pr$rate, main="Predicted vs actual")
lines(lowess(pr$rate ~ pr$finalDate,f=.5), col = 1)
points(pr.test$finalDate, pr.test$rate, col=2, pch=2)
lines(lowess(pr.test$rate ~ pr.test$finalDate,f=.5), col = 2)
points(pr.test$finalDate, pr.predict, col=3, pch=3)
lines(lowess(pr.predict ~ pr.test$finalDate,f=.5), col = 3) # Not a very good fit...
# Calculate, save RMSE
results[2,1] <- rmse(pr.stepped1$fit, pr.train$rate)
results[2,2] <- rmse(pr.predict, pr.test$rate) # This is pretty high, as expected
save(pr.stepped1, file="../models/m.ar.stepped")
rm(c, max, n, pr.fit, pr.predict, pr.stepped1, pr.stepped2, pr.stepped3)
#######################################
# Fit seasonal autoregressive         #
# Manual variable selection           #
#######################################
pr.fit <- lm(rate ~ . , pr.train)
summary(pr.fit)
# Remove variables (pseudo-)manually, removing the variable with the highest p-value first
repeat {
pvals <- summary(pr.fit)$coefficients[,4]
if(max(pvals) > .1) {
formula <- paste(". ~ . - ", names(which.max(pvals)), sep="")
pr.fit <- update(pr.fit, formula)
}
else {
break
}
}
summary(pr.fit)
pr.fit.nr <- update(pr.fit, . ~ .)
pr.predict <- predict(pr.fit.nr, pr.test)
pr.train.predict <- predict(pr.fit.nr, pr.train)
windows()
plot(pr$finalDate, pr$rate, main="Prediction vs actual")
points(pr.test$finalDate, pr.test$rate, col=2, pch=2)
points(pr.test$finalDate, pr.predict, col=3, pch=3)
# Calculate, save RMSE
results[3,1] <- rmse(pr.fit.nr$fit, pr.train$rate)
results[3,2] <- rmse(pr.predict, pr.test$rate) # Now we're getting somewhere
save(pr.fit.nr, file="../models/m.ar.manual")
pr.tr <- rpart(rate ~ ., pr.train,cp=.000000001)
plotcp(pr.tr)
printcp(pr.tr)
pr.tr1 <- prune(pr.tr, cp=.0001)
pr.tr1
train.hat <- predict(pr.tr1, pr.train)
results[4,1] <- rmse(train.hat, pr.train$rate)
test.hat <- predict(pr.tr1, pr.test)
results[4,2] <- rmse(test.hat, pr.test$rate)
windows()
par(mar=c(0,0,0,0))
rpart.plot(pr.tr1, main="Tree structure", split.col="gray40", branch.col="dodgerblue4", box.col="white",
border.col="dodgerblue4", under.col="blue", nn.box.col="white", varlen=21)
rpart
